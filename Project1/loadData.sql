INSERT INTO USERS(USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER)
SELECT DISTINCT USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER 
FROM project1.PUBLIC_USER_INFORMATION;


CREATE TABLE TEMP1_CITIES (CITY_NAME VARCHAR2(100), STATE_NAME VARCHAR2(100), COUNTRY_NAME VARCHAR2(100),
                           PRIMARY KEY (CITY_NAME, STATE_NAME, COUNTRY_NAME));
INSERT INTO TEMP1_CITIES(CITY_NAME, STATE_NAME, COUNTRY_NAME) 
SELECT DISTINCT CURRENT_CITY, CURRENT_STATE, CURRENT_COUNTRY 
FROM project1.PUBLIC_USER_INFORMATION
WHERE 
CURRENT_CITY IS NOT NULL OR CURRENT_STATE IS NOT NULL OR CURRENT_COUNTRY IS NOT NULL;


CREATE TABLE TEMP2_CITIES (CITY_NAME VARCHAR2(100), STATE_NAME VARCHAR2(100), COUNTRY_NAME VARCHAR2(100),
                           PRIMARY KEY (CITY_NAME, STATE_NAME, COUNTRY_NAME));
INSERT INTO TEMP2_CITIES(CITY_NAME, STATE_NAME, COUNTRY_NAME)
SELECT DISTINCT HOMETOWN_CITY, HOMETOWN_STATE, HOMETOWN_COUNTRY 
FROM project1.PUBLIC_USER_INFORMATION
WHERE 
HOMETOWN_CITY IS NOT NULL OR HOMETOWN_STATE IS NOT NULL OR HOMETOWN_COUNTRY IS NOT NULL;


CREATE TABLE TEMP3_CITIES (CITY_NAME VARCHAR2(100), STATE_NAME VARCHAR2(100), COUNTRY_NAME VARCHAR2(100),
                           PRIMARY KEY (CITY_NAME, STATE_NAME, COUNTRY_NAME));
INSERT INTO TEMP3_CITIES(CITY_NAME, STATE_NAME, COUNTRY_NAME)
SELECT DISTINCT EVENT_CITY, EVENT_STATE, EVENT_COUNTRY 
FROM project1.PUBLIC_EVENT_INFORMATION
WHERE 
EVENT_CITY IS NOT NULL OR EVENT_STATE IS NOT NULL OR EVENT_COUNTRY IS NOT NULL;


INSERT INTO CITIES(CITY_NAME, STATE_NAME, COUNTRY_NAME)
SELECT CITY_NAME, STATE_NAME, COUNTRY_NAME 
FROM TEMP1_CITIES 
UNION
SELECT CITY_NAME, STATE_NAME, COUNTRY_NAME 
FROM TEMP2_CITIES 
UNION
SELECT CITY_NAME, STATE_NAME, COUNTRY_NAME 
FROM TEMP3_CITIES;


DROP TABLE TEMP1_CITIES;
DROP TABLE TEMP2_CITIES;
DROP TABLE TEMP3_CITIES;


INSERT INTO USER_CURRENT_CITIES(USER_ID, CURRENT_CITY_ID)
SELECT DISTINCT USER_ID, CITY_ID
FROM project1.PUBLIC_USER_INFORMATION UI 
INNER JOIN CITIES
ON UI.CURRENT_CITY = CITIES.CITY_NAME 
AND
UI.CURRENT_STATE = CITIES.STATE_NAME 
AND
UI.CURRENT_COUNTRY = CITIES.COUNTRY_NAME;


INSERT INTO USER_HOMETOWN_CITIES(USER_ID, HOMETOWN_CITY_ID)
SELECT DISTINCT USER_ID, CITY_ID
FROM project1.PUBLIC_USER_INFORMATION UI 
INNER JOIN CITIES
ON UI.HOMETOWN_CITY = CITIES.CITY_NAME 
AND
UI.HOMETOWN_STATE = CITIES.STATE_NAME 
AND
UI.HOMETOWN_COUNTRY = CITIES.COUNTRY_NAME;


CREATE TABLE ALL_FRIENDS (USER1_ID NUMBER, USER2_ID NUMBER, PRIMARY KEY (USER1_ID, USER2_ID));
INSERT INTO ALL_FRIENDS(USER1_ID, USER2_ID) 
SELECT DISTINCT USER1_ID, USER2_ID 
FROM project1.PUBLIC_ARE_FRIENDS;


CREATE TABLE REVERSE_ALL_FRIENDS (USER1_ID NUMBER, USER2_ID NUMBER, PRIMARY KEY (USER1_ID, USER2_ID));
INSERT INTO ALL_FRIENDS(USER1_ID, USER2_ID) 
SELECT DISTINCT USER2_ID, USER1_ID 
FROM project1.PUBLIC_ARE_FRIENDS;


INSERT INTO FRIENDS(USER1_ID, USER2_ID)
SELECT Firend_Union.USER1_ID, Firend_Union.USER2_ID FROM (
SELECT AF.USER1_ID, AF.USER2_ID 
FROM ALL_FRIENDS AF
UNION 
SELECT RAF.USER1_ID, RAF.USER2_ID
FROM REVERSE_ALL_FRIENDS RAF) Firend_Union
WHERE Firend_Union.USER2_ID > Firend_Union.USER1_ID;


DROP TABLE ALL_FRIENDS;
DROP TABLE REVERSE_ALL_FRIENDS;


INSERT INTO PROGRAMS(INSTITUTION, CONCENTRATION, DEGREE)
SELECT DISTINCT INSTITUTION_NAME, PROGRAM_CONCENTRATION, PROGRAM_DEGREE 
FROM project1.PUBLIC_USER_INFORMATION
WHERE INSTITUTION_NAME IS NOT NULL OR PROGRAM_CONCENTRATION IS NOT NULL OR PROGRAM_DEGREE IS NOT NULL;


INSERT INTO EDUCATION(USER_ID, PROGRAM_YEAR, PROGRAM_ID)
SELECT DISTINCT UI.USER_ID, UI.PROGRAM_YEAR, PROGRAMS.PROGRAM_ID
FROM project1.PUBLIC_USER_INFORMATION UI 
INNER JOIN PROGRAMS
ON UI.INSTITUTION_NAME = PROGRAMS.INSTITUTION 
AND
UI.PROGRAM_CONCENTRATION = PROGRAMS.CONCENTRATION 
AND
UI.PROGRAM_DEGREE = PROGRAMS.DEGREE;


INSERT INTO USER_EVENTS(EVENT_ID, EVENT_CREATOR_ID, EVENT_NAME, EVENT_TAGLINE, EVENT_DESCRIPTION, EVENT_HOST, EVENT_TYPE, 
	                      EVENT_SUBTYPE, EVENT_ADDRESS, EVENT_CITY_ID, EVENT_START_TIME, EVENT_END_TIME)
SELECT EI.EVENT_ID, EI.EVENT_CREATOR_ID, EI.EVENT_NAME, EI.EVENT_TAGLINE, EI.EVENT_DESCRIPTION, EI.EVENT_HOST, EI.EVENT_TYPE, EI.EVENT_SUBTYPE, 
           EI.EVENT_ADDRESS, CITIES.CITY_ID, EI.EVENT_START_TIME, EI.EVENT_END_TIME 
FROM project1.PUBLIC_EVENT_INFORMATION EI 
INNER JOIN CITIES 
ON CITIES.CITY_NAME = EI.EVENT_CITY 
AND 
CITIES.STATE_NAME = EI.EVENT_STATE 
AND 
CITIES.COUNTRY_NAME = EI.EVENT_COUNTRY;


SET AUTOCOMMIT OFF;

INSERT INTO ALBUMS(ALBUM_ID, ALBUM_OWNER_ID, ALBUM_NAME, ALBUM_CREATED_TIME, ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY, COVER_PHOTO_ID)
SELECT DISTINCT ALBUM_ID, OWNER_ID, ALBUM_NAME, ALBUM_CREATED_TIME, ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY, COVER_PHOTO_ID 
FROM project1.PUBLIC_PHOTO_INFORMATION;


INSERT INTO PHOTOS(PHOTO_ID, ALBUM_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK)
SELECT DISTINCT PHOTO_ID, ALBUM_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK 
FROM project1.PUBLIC_PHOTO_INFORMATION;

COMMIT;
SET AUTOCOMMIT ON;


INSERT INTO TAGS(TAG_PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X, TAG_Y)
SELECT DISTINCT PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X_COORDINATE, TAG_Y_COORDINATE 
FROM project1.PUBLIC_TAG_INFORMATION;
